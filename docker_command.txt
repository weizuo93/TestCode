
						*****************************************************************************	
						*									    *									
						*			          Docker 命令                               *
						*									    *
						*****************************************************************************

docker pull [选项] [Docker Registry 地址[:端口号]/]仓库名[:标签]                                           # 获取镜像
注：Docker镜像仓库地址的格式一般是“<域名/IP>[:端口号]”，默认地址是Docker Hub(docker.io)。仓库名是两段式名称，即“<用户名>/<软件名>”，对于Docker Hub，如果不给出用户名，则默认为library，也就是官方镜像。

docker run -it <镜像名称> /bin/bash                                                                       # 以镜像为基础启动并运行容器
docker run -it -v <本机目录>:<容器目录> <镜像名称> /bin/bash                                               # 以镜像为基础启动并运行容器，同时将容器目录与本机目录建立关联
docker run -it --cap-add SYS_PTRACE --privileged=true -v <本机目录>:<容器目录> <镜像名称> /bin/bash        # 以镜像为基础启动并运行容器，同时将容器目录与本机目录建立关联
注：“-it”是两个参数，一个是-i（交互式操作），一个是-t（终端），可以进入bash执行一些命令并查看返回结果，因此我们需要交互式终端。
    “--rm”参数可以让容器退出后随之将其删除；默认情况下，退出的容器并不会立即删除，除非手动 docker rm。

docker ps                                                                                                 # 列出所有正在运行的容器
docker ps -a                                                                                              # 列出所有容器（包括已停止的容器）

docker start <CONTAINER ID|NAME>                                                                          # 启动容器
docker stop <CONTAINER ID|NAME>                                                                           # 停止容器

docker exec -i -t <CONTAINER ID|NAME> /bin/bash                                                           # 执行容器（执行容器之前需要先启动容器）

docker rm <CONTAINER ID|NAME> <CONTAINER ID|NAME> ...                                                     # 删除容器（删除容器之前需要先停止容器）
docker rm $(docker ps -a -q)                                                                              # 一次删除所有所有停止的容器



    
